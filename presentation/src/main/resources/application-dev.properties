spring.application.name=presentation
# DB dataSource URL
spring.datasource.url=${DB_ENDPOINT}

# DB username should change your localhost
spring.datasource.username=${DB_USERNAME}

# DB password should change your password
spring.datasource.password=${DB_PASSWORD}

# Hibernate do not convert logical naming to physical name.
# ex ) if you write member_id, that may apply member_id.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# Lazy datasource initialization for docker environment.
spring.jpa.defer-datasource-initialization=true

# show sql query, when execute jpa query method
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true

# redis configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
# Server port configuration
spring.data.redis.password=${REDIS_PASSWORD}
server.port=${SERVER_PORT}

# Logging configuration for dev environment
logging.config=classpath:logback-spring-dev.xml

# fcm key path
fcm.sdk.key.path=${FCM_SDK_KEY_PATH}

# fileSystem path
file.upload-absolute-path=${FILE_UPLOAD_ABSOLUTE_PATH}

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# security
spring.security.oauth2.client.registration.google.client-id=${OAUTH2_GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH2_GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.kakao.client-id=${OAUTH2_KAKAO_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri=${OAUTH2_KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email

spring.security.oauth2.client.registration.naver.client-id=${OAUTH2_NAVER_ID}
spring.security.oauth2.client.registration.naver.client-secret=${OAUTH2_NAVER_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${OAUTH2_NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# jwt
jwt.issuer=${JWT_ISSUER}
jwt.secret_key=${JWT_SECRET_KEY}
jwt.AccessTokenExpiration=${ACCESS_TOKEN_EXPIRATION}
jwt.RefreshTokenExpiration=${REFRESH_TOKEN_EXPIRATION}

# socket debug
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.security=DEBUG